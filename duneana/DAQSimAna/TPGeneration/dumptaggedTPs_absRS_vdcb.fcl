#include "TaggedHitDump.fcl"
#include "AbsRunningSum.fcl"
##include "StandardHF.fcl # <-- here if want to use standard HF

BEGIN_PROLOG
trigprim_ana: {
   @table::taggedprimdump_ana
   SimChanLabel:  "elecDrift"
   RawDigitLabel: "tpcrawdecoder:daq"
   Geant4Label:   "largeant"   #"elecDrift"
   OutputFile:    "test_tagged_collection_tps.txt"
   OutputFile1:   "test_tagged_induction_tps.txt"
   VDCBgeo:        true
}
END_PROLOG
#include "standard_detsim_dune10kt_1x2x6.fcl"


process_name: PrimSim

services: @local::dunefd_simulation_services
services.TimeTracker:       {}
services.MemoryTracker:         { } # default is one
services.RandomNumberGenerator: {} #ART native random number generator
services.NuRandomService:       @local::per_event_NuRandomService  # seedservice.fcl
services.message:              @local::dune_message_services_prod

source: {
  module_type: RootInput
  maxEvents:  -1        # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics: {
   producers: {
      
      # HF chain for trigger primitive generation
      #use absrunningsumtppass1 for HF with standard geometries and raw digit read-in
      #use absrunningsumtppass2 for HF with VDCB setup
      trigprim: @local::absrunningsumtppass2  
      
      rns:            { module_type: "RandomNumberSaver" }
   }
   
   analyzers: {
      # Create an SNAna for each trigger primitive finders. Make
      # sure to add each one to the "ana" list below

      anatrigprim:    @local::trigprim_ana
     
   }

   simulate: [rns, trigprim]

   ana     : [anatrigprim]
   
   trigger_paths: [ simulate ] 
   end_paths: [ ana ] 

}

#Pass RawDigits into HF from WireCell
physics.producers.trigprim.InputTag: "tpcrawdecoder:daq"
# Modify the threshold for the trigger primitve finder 
physics.producers.trigprim.finderCol.Threshold: 1800 #1800
physics.producers.trigprim.finderInd.Threshold: 2300 #2200


# Set the HitLabel to make sure each DaqAnaSim reads hits from its
#  corresponding TriggerPrimitiveFinder
physics.analyzers.anatrigprim.HitLabel: "trigprim"

#Modifications for VDCB
services.Geometry.GDML: "dunevdcb1_refactored.gdml"
services.Geometry.Name: "dunevdcb1"
services.Geometry.ROOT: "dunevdcb1_refactored.gdml"

# Turn off Photon hit finding for VDCB

# Plane View Y Error:
services.DetectorPropertiesService.TimeOffsetY: 0
